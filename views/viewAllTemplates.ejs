<%- include('partials/head.ejs') %>

    <body>
        <style>
            .table td {
                       max-width: 200px;
                       /* Adjust the width as needed */
                       white-space: nowrap;
                       overflow: hidden;
                       text-overflow: ellipsis;
                       white-space: normal;
                       word-wrap: break-word;
                   }
       </style>
        <div class="container-scroller">
            <%- include('partials/navbar.ejs') %>
                <div class="container-fluid page-body-wrapper">
                    <%- include('partials/sidebar.ejs') %>
                        <div class="main-panel">
                            <div class="content-wrapper">
                                <div class="page-header">
                                    <h3 class="page-title">
                                        <span class="page-title-icon bg-gradient-primary text-white me-2">
                                            <i class="mdi mdi-home"></i>
                                            <!-- <img src="/static/assets/images/home-gradient.png" alt="" style="width: 35px;"> -->
                                        </span> All Templates
                                    </h3>
                                </div>
                                <div class="row">
                                    <div class="col-lg-12 grid-margin stretch-card">
                                        <div class="card">
                                            <div class="card-body">
                                                <h4 class="card-title">All Templates</h4>

                                                <table id="data-table" class="table">
                                                    <thead>
                                                        <tr>
                                                            <th scope="col">ID</th>
                                                            <th scope="col">Name</th>
                                                            <th scope="col">Status</th>
                                                            <th scope="col">Component Body Text</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <!-- Data will be inserted here -->
                                                    </tbody>
                                                </table>
                                                <div class="selectPageOptionAndPaging">
                                                    <select id="pageSelect"></select>
                                                </div>
                                                <div id="pagination">
                                                    <button class="button-12" id="prevButton">Previous</button>
                                                    <span id="pageInfo">Page 1</span>
                                                    <button class="button-12" id="nextButton">Next</button>
                                            </div>

                                                <script>
                                                    const apiUrl = 'https://graph.facebook.com/v17.0/104022815935352/message_templates';
                                                    const itemsPerPage =10; // Number of items to display per page
                                                    let currentPage = 1;
                                                    let totalData = [];
                                                    const tableBody = document.querySelector('#data-table tbody');
                                                    const pageSelect = document.getElementById('pageSelect');

                                                    async function fetchData(page) {
                                                        try {
                                                            const response = await fetch(`${apiUrl}?page=${page}&limit=${itemsPerPage}`, {
                                                                headers: {
                                                                    Authorization: `Bearer EAAWqeZCMrJ6sBO7zUipLVLmnOdyF0ZBPcMyJC17gRmcZAZAnn3mMbRkvb19SFMiwvZCaIhuZAeB1C0QCrgfJK193Hav9kIDsKM5ZCvFAVkjgAkb57BOj2DWULJmEDvdxjpp01hpsznvZA7ZBVaO22QQdFjmfa0bggPndsH81BegAEgD8hSak3Pz8woVvPwLOMKAOnNLVEiDggLACVbaru`,
                                                                    "Content-Type": "application/json",
                                                                }
                                                            });
                                                            const data = await response.json();

                                                            if (data.data && data.data.length > 0) {
                                                                totalData = data.data; // Store all data
                                                                tableBody.innerHTML = ''; // Clear the table body

                                                                const startIndex = (currentPage - 1) * itemsPerPage;
                                                                const endIndex = startIndex + itemsPerPage;
                                                                const itemsToDisplay = totalData.slice(startIndex, endIndex);

                                                                itemsToDisplay.forEach((item, index) => {
                                                                    const row = tableBody.insertRow();
                                                                    const idCell = row.insertCell(0);
                                                                    const nameCell = row.insertCell(1);
                                                                    const statusCell = row.insertCell(2);
                                                                    const bodyTextCell = row.insertCell(3);

                                                                    idCell.textContent = startIndex + index + 1; // Calculate the ID
                                                                    nameCell.textContent = item.name || 'N/A';
                                                                    statusCell.textContent = item.status || 'N/A';

                                                                    // Find the 'BODY' component in the 'components' array
                                                                    const bodyComponent = item.components.find(component => component.type === 'BODY');
                                                                    if (bodyComponent) {
                                                                        bodyTextCell.textContent = bodyComponent.text || 'N/A';
                                                                    } else {
                                                                        bodyTextCell.textContent = 'N/A';
                                                                    }
                                                                });

                                                                // Update page info
                                                                const pageInfo = document.getElementById('pageInfo');
                                                                pageInfo.textContent = `Page ${currentPage}`;

                                                                // Populate the select box with page numbers
                                                                populatePageSelect();

                                                            } else {
                                                                // ghvnvnbvnbvn
                                                                console.error('No data found.');
                                                            }
                                                        } catch (error) {
                                                            console.error('Error fetching data:', error);
                                                        }
                                                    }

                                                    // Function to populate the select box with page numbers
                                                    function populatePageSelect() {
                                                        const pageCount = Math.ceil(totalData.length / itemsPerPage);
                                                        pageSelect.innerHTML = '';
                                                        for (let i = 1; i <= pageCount; i++) {
                                                            const option = document.createElement('option');
                                                            option.value = i;
                                                            option.textContent = `Page ${i}`;
                                                            pageSelect.appendChild(option);
                                                        }
                                                        pageSelect.value = currentPage;
                                                    }

                                                    // Event listener for previous button
                                                    document.getElementById('prevButton').addEventListener('click', () => {
                                                        if (currentPage > 1) {
                                                            currentPage--;
                                                            fetchData(currentPage);
                                                        }
                                                    });

                                                    // Event listener for next button
                                                    document.getElementById('nextButton').addEventListener('click', () => {
                                                        const startIndex = (currentPage - 1) * itemsPerPage;
                                                        if (startIndex + itemsPerPage < totalData.length) {
                                                            currentPage++;
                                                            fetchData(currentPage);
                                                        }
                                                    });

                                                    // Event listener for page select
                                                    pageSelect.addEventListener('change', () => {
                                                        currentPage = parseInt(pageSelect.value);
                                                        fetchData(currentPage);
                                                    });

                                                    // Initial data load
                                                    fetchData(currentPage);
                                                </script>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <%- include('partials/footer.ejs') %>
                        </div>
                </div>
        </div>

    </body>
    <%- include('partials/scripts.ejs') %>

        </html>