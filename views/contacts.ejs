<%- include('partials/head.ejs') %>
  <body>
    <style>
      .selectGroupForm{
        display: flex;
        justify-content: space-between;
        width: 30%;
      }



      #GroupMNgBtn:hover {
                      color: white;
                    }
                    .ClassNoSix:hover{color: white;}
                    .ClassNoFour:hover{color: white;}

                    #changeModelContent {
                            width: 33%;
                          }

                          .deleteAndCancel {
                            display: flex;
                            justify-content: space-around;
                          }

                          .deleteAndCancel button {
                            background: linear-gradient(to right, #da8cff, #9a55ff);
                            outline: none;
                            border: none;
                            padding: 7px;
                            border-radius: 5px;
                            width: 30%;
                          }

                          .deleteAndCancel button:focus {
                            border: 1px solid black;
                            box-shadow: 1px 0px 5px black;
                          }

                          /* Modal Styles */
                  .modal {
                    display: none;
                    position: fixed;
                    z-index: 1;
                    left: 0;
                    top: 0;
                    width: 100%;
                    height: 100%;
                    background-color: rgba(0, 0, 0, 0.4);
                  }

                  .modal-content {
                    background-color: #fff;
                    margin: 22% auto;
                    padding: 20px;
                    border: 1px solid #888;
                    width: 45%;
                    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
                    padding: 44px;
                    padding-top: 25px;
                  }

                  .close {
                    color: #aaa;
                    float: right;
                    font-size: 28px;
                    font-weight: bold;
                    cursor: pointer;
                  }

                  .close:hover {
                    color: black;
                  }

                  /* animation of modal */
      /* .modal-open {
        animation: modal-open-animation 0.5s ease-in-out;
      }

      @keyframes modal-open-animation {
        from {
          opacity: 0;
          transform: translateY(-50px);
        }

        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      #editModal {
        display: none;
      } */
    </style>

    <div class="container-scroller">
      <%- include('partials/navbar.ejs') %>
        <div class="container-fluid page-body-wrapper">
          <%- include('partials/sidebar.ejs') %>
            <div class="main-panel">
              <div class="content-wrapper">
                <div class="page-header">
                  <h3 class="page-title">
                    <span class="page-title-icon bg-gradient-primary text-white me-2">
                      <i class="mdi mdi-home"></i>
                      <!-- <img src="/static/assets/images/home-gradient.png" alt="" style="width: 35px;"> -->
                    </span> Contacts Book

                  </h3>
                </div>

<div id="addContactModal" class="modal">
  <div class="modal-content">
    <span class="close" onclick="closeAddContactModal()">&times;</span>
    <h2>Add Contact</h2>
    <form id="addContactForm">
      <div class="form-group">
        <input type="text" id="contactName" placeholder="Enter Name" required>
      </div>
      <div class="form-group">
        <input type="tel" id="contactNumber" placeholder="Enter Phone Number" required>
      </div>
      <button type="submit">Add</button>
    </form>
  </div>
</div>


<div id="addContactModal" class="modal">
  <div class="modal-content">
    <span class="close" onclick="closeAddContactModal()">&times;</span>
    <h2>Add Contact</h2>
    <form id="addContactForm">
      <div class="form-group">
        <label for="contactName">Name:</label>
        <input type="text" id="contactName" name="contactName" required>
      </div>
      <div class="form-group">
        <label for="contactNumber">Contact Number:</label>
        <input type="text" id="contactNumber" name="contactNumber" required>
      </div>
      <button type="submit">Submit</button>
    </form>
  </div>
</div>
                <!-- add custom code here -->
                <!-- <div class="uploadFile">
                  <form action="/uploadingFile" method="post" style="width: 73%; display: flex;"
                    enctype="multipart/form-data" onsubmit="return validateForm()">
                    <div class="mb-3" style="width: 15rem;">
                      <label for="fileID" class="contactUpload" id="showFileName">
                        Upload Contacts <img src="/static/assets/images/f.png" alt="fe" style="width: 22px;"></label>
                      <input class="form-control w-50" name="file" id="fileID" type="file"
                        accept=".xlsx, .xls, .csv, .xlsm, .xlsb, .ods, .xml, .html, .txt, .pdf, .dbf, .sylk" value=""
                        onchange="displayFileName()">
                    </div>
                    <div class="buttons" style="margin-left: -78px;
                    padding: 3px;">

                      <p style="text-align: center; background: red;color: white;width: 60%;margin: auto;   border-radius: 3px;"
                        id="cetegoryErrorMsg"></p>



                    </div>
                  </form>
                  <a href="/Group_management" id="GroupMNgBtn" class="button-12"
                    style="text-decoration: none; height: 30px; margin-top: 10px; background-color: white; color: black;">Group management</a>
<button id="addContactButton">Add Contact</button>
                </div> -->




<div class="uploadFile">
  <form action="/uploadingFile" method="post" style="width: 100%; display: flex;"
    enctype="multipart/form-data" onsubmit="return validateForm()">
    <div class="mb-3" style="width: 15rem;">
      <label for="fileID" class="contactUpload" id="showFileName">
        Upload Contacts <img src="/static/assets/images/f.png" alt="fe" style="width: 22px;">
      </label>
      <input class="form-control w-50" name="file" id="fileID" type="file"
        accept=".xlsx, .xls, .csv, .xlsm, .xlsb, .ods, .xml, .html, .txt, .pdf, .dbf, .sylk" value=""
        onchange="displayFileName()">
    </div>
    <div class="buttons" style="margin-left: -78px; padding: 3px;">
      <!-- <button type="submit" class="button-12" id="uploadContactsButtons" style="background-color: white; color: black;margin-left: 19px; padding: -1px;">Upload</button> -->
      <p style="text-align: center; background: red;color: white;width: 60%;margin: auto;   border-radius: 3px;"
        id="cetegoryErrorMsg"></p>
    </div>
  </form>
  <a href="/Group_management" id="GroupMNgBtn" class="button-12"
    style="text-decoration: none; height: 30px; margin-top: 10px; background-color: white; color: black;width: 279px;">Group management</a>
  <button id="addContactButton" style="width: 163px;
        margin: 11px 34px 33px 20px;;
    ;">Add Contact</button>
</div>


<!-- Button to open the modal -->

                <div class="row">
                  <!-- <div class="GroupErrorMessage" style="display: flex; justify-content: center;align-items: center;"> -->
                  <!-- </div> -->
                  <div class="col-lg-12 grid-margin stretch-card">
                    <div class="card">
                      <div class="card-body">
                        <div class="showTotalCount">
                          <h4 class="card-title">Total Contacts is <%=CountTotalNumbers%> <span>

                              </span> </h4>

                          <!-- <form id="searchForm" role="search"> -->
                          <input type="search" onkeyup="searchHere()" id="searchInput" name="q" placeholder="Search...."
                            aria-label="Search">
                          <!-- <button style="background-color :black;" type="submit">Search</button> -->
                          <!-- </form> -->




                        </div>



                        <p class="card-description"> You can <code>sort</code> the data by
                          clicking on the titles.
                        </p>

                        <table class="table" id="viewDataPage">
                          <thead>
                            <tr>
                              <th class="initially-hidden"><input type="checkbox"id="selectAllbox" onclick="selectAll()"><span style="margin-left: 12px;">Select</span></th>
                              <th>Name</th>
                              <th>Mobile</th>
                              <th>Groups</th>
                              <th>Action</th>
                            </tr>
                          </thead>
                          <tbody>
                            <% users.forEach(function(user) { %>
                              <tr>
                                <td class="initially-hidden">
                                  <input onclick="editGroups(this)" id="checkboxes" type="checkbox"
                                    class="user-checkbox" name="selectedUsers"
                                    value="<%= user.mobile?.replace(/[\n\r\s]+/g, '') %>">
                                </td>
                                <td class="oops">
                                  <%= user.name.trim() %>
                                </td>
                                <td>
                                  <%= user.mobile?.replace(/[\n\r\s]+/g, '' ) %>
                                </td>
                                <td class="user-Group">
                                  <%= user.Groups %>
                                </td>
                                <td>
                                  <!-- Edit Icon -->
                                  <a style="color: #323232; font-size: 15px;" href="/editRole?userId=<%= user.userID %>"
                                    class="edit-icon edit-button" onclick="openModal()">
                                    <i class="fas fa-edit"></i>
                                  </a>
                                  <a href="#" style="color: #323232; font-size: 15px; position: relative; left: 18px;"
                                    onclick="openDeleteModal('<%= user._id %>')">
                                    <i class="fa fa-trash" aria-hidden="true"></i>
                                  </a>
                                </td>
                              </tr>
                              <% }); %>
                          </tbody>
                        </table>



                        <div class="buttonContainer">

                          <!-- <div class="GroupBtn"> -->
                            <!-- <button class="button-12" id="selectAllbox" onclick="selectAll()">Select All</button> -->

                            <form method="POST" class="selectGroupForm" action="/updateGroups"
                              onsubmit="assignGroupToSelected();return validateCheckboxSelection();">
                              <!-- <label for="Group">Select a Group:</label> -->
                              <select name="Group" id="Group">
                                <option value="">Select Groups</option>
                                <% GroupNames.forEach(GroupName=> { %>
                                  <option value="<%= GroupName %>">
                                    <%= GroupName %>
                                  </option>
                                  <% }); %>
                              </select>
                              <button type="submit" class="button-12">Add</button>
                            </form>


                          <!-- </div> -->

                          <!-- <div class="pagination-container"> -->
                            <% if (hasPrevPage) { %>
                              <a href="/contacts?page=<%= prevPage %>&sort=<%= sort %>" class="button-12 ClassNoFour"
                                style="text-decoration: none;">Previous</a>
                              <% } %>
                                <% if (hasNextPage) { %>
                                  <a href="/contacts?page=<%= nextPage %>&sort=<%= sort %>" class="button-12 ClassNoSix"
                                    style="text-decoration: none;">Next</a>
                                  <% } %>
                          <!-- </div> -->

                        </div>


                        <!-- delete modal starts -->
                        <div id="deleteConfirmationModal" class="modal">
                          <div class="modal-content" id="changeModelContent">
                            <h2 style="text-align: center;">Are you sure</h2>
                            <p>Are you sure you want to delete this user?</p>
                            <div class="deleteAndCancel">
                              <button id="confirmDeleteButton">Delete</button>
                              <button id="cancelDeleteButton">Cancel</button>
                            </div>
                          </div>
                        </div>
                        <script>
                          function openDeleteModal(userId) {
                            const modal = document.getElementById('deleteConfirmationModal');
                            modal.style.display = 'block';
                            const userIdInput = document.createElement('input');
                            userIdInput.type = 'hidden';
                            userIdInput.name = 'userIdToDelete';
                            userIdInput.value = userId;
                            modal.appendChild(userIdInput);
                          }
                          function closeDeleteModal() {
                            const modal = document.getElementById('deleteConfirmationModal');
                            modal.style.display = 'none';
                            const userIdInput = document.querySelector('input[name="userIdToDelete"]');
                            if (userIdInput) {
                              userIdInput.remove();
                            }
                          }
                          document.getElementById('confirmDeleteButton').addEventListener('click', function () {
                            const userIdToDelete = document.querySelector('input[name="userIdToDelete"]').value;
                            closeDeleteModal();
                          });

                          document.getElementById('cancelDeleteButton').addEventListener('click', function () {
                            closeDeleteModal();
                          });
                        </script>
                        <!-- delete modal Ends -->
                      </div>
                    </div>
                  </div>
                </div>

              </div>
              <%- include('partials/footer.ejs') %>
            </div>
        </div>
    </div>

    <div id="editModal" class="modal">
      <div class="modal-content"> <!--onclick="hideModelNow()"-->
        <span class="close" id="closeModal" onclick="hideAndSeek();">×</span>
        <h2 class="text-center">Edit Contacts</h2>
        <form id="roleEditForm">
          <div class="form-group" id="hideWhilePressOnBulk">
            <input type="text" name="newName" id="newName" class="form-control p-2" placeholder="Enter your name">
            <p class="text-danger" id="phoneError"></p>
          </div>
          <div class="form-group" id="hideWhilePressOnBulk">
            <input type="number" name="newMobile" id="newMobile" class="form-control p-2"
              placeholder="Enter your phone number">
            <p class="text-danger" id="phoneError"></p>
          </div>

          <div class="form-group" id="hideWhilePressOnBulk">
            <input type="text" name="newGroup" id="newGroup" class="form-control p-2" placeholder="Edit Group">
          </div>


          <button type="submit" style="padding: 15px;" id="saveChanges"
            class="btn btn-block btn-gradient-primary btn-lg font-weight-medium auth-form-btn">Save Changes</button>
        </form>
      </div>
    </div>

    <script>
      var editIcons = document.querySelectorAll('.edit-icon');
      var modal = document.getElementById('editModal');
      var roleEditForm = document.getElementById('roleEditForm');
      var newNameInput = document.getElementById('newName');
      var newMobileInput = document.getElementById('newMobile');
      var newGroupInput = document.getElementById('newGroup');
      editIcons.forEach(function (editIcon) {
        editIcon.addEventListener('click', function (event) {
          event.preventDefault();
          var userId = this.getAttribute('href').split('=')[1];
          // console.log(userId);
          // Show the modal
          modal.style.display = 'block';

          // Fetch the current user role via AJAX
          var xhr = new XMLHttpRequest();
          xhr.open('GET', `/getUserRole/${userId}`, true);
          xhr.onreadystatechange = function () {
            if (xhr.readyState === 4 && xhr.status === 200) {
              var data = JSON.parse(xhr.responseText);
              var currentName = data.name;
              var currentMobile = data.mobile;
              var currentGroup = data.Groups;
              newNameInput.value = currentName;
              newMobileInput.value = currentMobile;
              newGroupInput.value = currentGroup;
            } else if (xhr.readyState === 4 && xhr.status !== 200) {
              console.error('Error fetching user name and mobile', xhr.status, xhr.statusText);
            }
          };
          xhr.send(null);
          // Handle the form submission
          roleEditForm.addEventListener('submit', function (e) {

            e.preventDefault();
            var newname = newNameInput.value;
            // console.log(newname);
            var newmobile = newMobileInput.value;
            // console.log(newmobile);
            var newGroup = newGroupInput.value;
            // console.log(newGroup);
            // Send an AJAX request to update the user's role
            var xhr2 = new XMLHttpRequest();

            xhr2.open('POST', `/updateRole/${userId}`, true);
            // console.log('User role updated successfully');
            xhr2.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');
            xhr2.onreadystatechange = function () {
              if (xhr2.readyState === 4 && xhr2.status === 200) {
                modal.style.display = 'none';
                var editIconSelector = `.edit-icon[href="/editRole?userId=${userId}"]`;
                var editIcon = document.querySelector(editIconSelector);

                if (editIcon) {
                  var row = editIcon.closest('tr');

                  if (row) {
                    var nameCell = row.querySelector('td:nth-child(2)');
                    var mobileCell = row.querySelector('td:nth-child(3)');
                    var GroupCell = row.querySelector('td:nth-child(4)');

                    if (nameCell && mobileCell && GroupCell) {
                      nameCell.textContent = newname;
                      mobileCell.textContent = newmobile;
                      GroupCell.textContent = newGroup;
                    } else {
                      console.error('Name and/or mobile cell not found');
                    }
                  } else {
                    console.error(`Row not found for userID: ${userId}`);
                  }
                } else {
                  console.error(`Edit icon not found for userID: ${userId}`);
                }
              } else if (xhr2.readyState === 4 && xhr2.status !== 200) {
                // Handle error response
                console.error('Error updating user role', xhr2.status, xhr2.statusText);
              }
            };
            xhr2.send(JSON.stringify({ newname: newname, newmobile: newmobile, newGroup: newGroup }));
            // console.log("update successfully!")
            window.location.reload();
          });
        });
      });

      // Handle modal close when "Cancel" button is clicked
      // var cancelButton = document.getElementById('cancelButton');
      // cancelButton.addEventListener('click', function () {
      //   modal.style.display = 'none';
      // });

      // Handle modal close when clicking outside the modal
      window.onclick = function (event) {
        if (event.target === modal) {
          modal.style.display = 'none';
        }
      };



      function openModal() {
        const modal = document.getElementById("editModal");
        modal.style.display = "block";
        modal.classList.add("modal-open");
      }
      hideAndSeek = () => {
        const editModal = document.getElementById('editModal').style.display = 'none';
        // document.getElementById('closeModal')
      }

      function validateCheckboxSelection() {
        // Get all the checkbox elements by their name attribute
        const checkboxes = document.querySelectorAll('input[name="selectedUsers"]');

        let atLeastOneChecked = false;

        checkboxes.forEach(checkbox => {
          if (checkbox.checked) {
            atLeastOneChecked = true;
            return;
          }
        });

        if (!atLeastOneChecked) {
          // cetegoryErrorMsg
          document.getElementById('cetegoryErrorMsg').innerHTML = 'Please select at least one user before adding a Group';
          // alert("Please select at least one user before adding a Group.");
          return false; // Prevent the form from submitting
        }

        return true; // Allow the form to submit
      }
  function displayFileName() {
    const fileInput = document.getElementById('fileID');
    const uploadedFileName = document.getElementById('uploadedFileName');

    if (fileInput.files.length > 0) {
      uploadedFileName = document.getElementById('showFileName').innerHTML = `${fileInput.files[0].name}`;
    } else {
      uploadedFileName.textContent = "";
    }
  }

  function validateForm() {
    var fileInput = document.getElementById("fileID");
    // var errorMsg = document.getElementById("cetegoryErrorMsg");
    if (fileInput.files.length === 0) {
      document.getElementById('cetegoryErrorMsg').innerText = "Please select a file.";
      return false;
    } else {
      errorMsg.innerText = "";
      return true;
    }
  }


      window.history.pushState(null, null, window.location.href);
      window.onpopstate = function () {
        window.history.pushState(null, null, window.location.href);
      };


  // Get the button and modal elements
  const addContactButton = document.getElementById('addContactButton');
  const addContactModal = document.getElementById('addContactModal');

  // Show the modal when the button is clicked
  addContactButton.addEventListener('click', function() {
    addContactModal.style.display = 'block';
  });

  // Function to close the modal
  function closeAddContactModal() {
    addContactModal.style.display = 'none';
  }

  const addContactForm = document.getElementById('addContactForm');

  // Add event listener for form submission
  addContactForm.addEventListener('submit', function(event) {
    event.preventDefault(); // Prevent the default form submission

    // Get the entered data
    const contactName = document.getElementById('contactName').value;
    const contactNumber = document.getElementById('contactNumber').value;

    // Here, you can send the data to your schema via AJAX or any other method
    // For example:
    fetch('/uploadContact', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ name: contactName, mobile: contactNumber })
    })
    .then(response => {
      if (response.ok) {
        // Data submitted successfully, you can close the modal or show a success message
        closeAddContactModal();
        // Optionally, you can reload the page to update the contact list
        window.location.reload();
      } else {
        throw new Error('Failed to add contact');
      }
    })
    .catch(error => {
      console.error('Error adding contact:', error);
      // Handle error, show error message, etc.
    });
  });

    </script>
  </body>
  <%- include('partials/scripts.ejs') %>

    </html>
